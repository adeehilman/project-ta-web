<?php

namespace App\Http\Controllers;

use Illuminate\Support\Facades\DB;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;

class ProfilKaryawanController extends Controller
{
    public function index()
    {

        $data = [
            'userInfo' => DB::table('tbl_useradmin')->where('badge_id', session('loggedInUser'))->first(), 
            'userRole' => (int)session()->get('loggedInUser')['session_roles'], 
            'positionName' => DB::table('tbl_vlookup')->select('name_vlookup')->where('id_vlookup', session()->get('loggedInUser')['session_roles'])->first()->name_vlookup,
        ];

        return view('karyawan.profil', $data);
    }


    public function update_rfid(Request $req)
    {

        $badge = trim($req->post('badge'));
        $rfid = $req->post('rfidNo');
        $txNoHp = $req->post('txNoHp');
        $txNoHp2 = $req->post('txNoHp2');
        $txNoTelp = $req->post('txNoTelp');
        $txEmail = $req->post('txEmail');
        $selectKecamatan = $req->post('selectKecamatan');
        $selectKelurahan = $req->post('selectKelurahan');
        $deskripsi = $req->post('deskripsi');                       

    
        DB::beginTransaction();
        try {
            //code...

            $checkCount = DB::table('tbl_alamat')->where('badge_id', $badge)->count();

            $data = array(
                'rfid_no' => $rfid,
                'no_hp' => $txNoHp,
                'no_hp2' => $txNoHp2,
                'home_telp' => $txNoTelp,
                'email' => $txEmail,
                'updatedate' => date('Y-m-d H:i:s'), 
                'updateby' => session('loggedInUser')['session_badge']
            );

            DB::table('tbl_karyawan')->where('badge_id', $badge)->update($data);


            if($checkCount > 0){

                $dataAlamat = array(
                    'alamat' => $deskripsi, 
                    'kecamatan' => $selectKecamatan,
                    'kelurahan' => $selectKelurahan
                );

                DB::table('tbl_alamat')->where('badge_id', $badge)->update($dataAlamat);
                

            }else{

                
                $dataAlamat = array(
                    'badge_id' => $badge,
                    'alamat' => $deskripsi, 
                    'kecamatan' => $selectKecamatan,
                    'kelurahan' => $selectKelurahan
                );

                DB::table('tbl_alamat')->insert($dataAlamat);
            }          


            

            DB::commit();
            return response()->json([
                'status'    => 200, 
                'message'   => 'Data berhasil diupdate'
            ]);
            
        } catch (\Exception $ex) {
            DB::rollback();
            return response()->json([
                'status'    => 401, 
                'message'   => 'gagal menyimpan' . $ex->getMessage()
            ]);
        } catch (\Throwable $th) {
            DB::rollback();
            return response()->json([
                'status'    => 401, 
                'message'   => 'gagal menyimpan' . $th->getMessage()
            ]);
        }

    }


    public function kelurahan_list(Request $req)
    {

        $id = $req->get('id');
        $q = "SELECT id, kelurahan FROM `tbl_kelurahan` WHERE id_kecamatan='$id'";
        $result = DB::select($q);

        if($result){
            return response()->json([
                'status' => 200, 
                'data' => $result
            ]);
        }
    }

    public function kecamatan_list()
    {
        $q = "SELECT id, kecamatan FROM `tbl_kecamatan`";
        $result = DB::select($q);

        if($result){
            return response()->json([
                'status' => 200, 
                'data' => $result
            ]);
        }
    }

    public function alamat_by_badge(Request $req)
    {
        $badge = $req->get('badge');

        $q = "SELECT * FROM `tbl_alamat` WHERE badge_id='$badge'";
        $result = DB::select($q);

        if($result){
            return response()->json([
                'status' => 200, 
                'data' => $result
            ]);
        }
    }

    public function mms_list_by_badge(Request $req)
    {
        $badge = $req->get('badge');

        $output = "";

        $q = "SELECT a.tipe_hp, (SELECT name_vlookup FROM tbl_vlookup WHERE id_vlookup=a.merek_hp) as brand, (SELECT name_vlookup FROM tbl_vlookup WHERE id_vlookup=a.os) as os, a.versi_aplikasi FROM `tbl_mms` a WHERE badge_id='$badge'";
        $result = DB::select($q);

        $output .= 
        '
        <table class="table table-responsive table-hover" style="max-width: 1000px;">
            <thead>
                <tr style="color: #CD202E; height: -10px;" class="table-danger">
                <th class="p-3" scope="col">Model</th>
                <th class="p-3" scope="col">Brand</th>
                <th class="p-3" scope="col">OS</th>
                <th class="p-3" scope="col">Versi Aplikasi</th>
                </tr>
            </thead>
            <tbody>
        ';


        if($result){

            foreach($result as $row){

                // $dataOs = $row->os == 'ANDROID' ? '<i class="bx bxl-android"></i> ANDROID' : '<i class="bx bxl-apple"></i> IOS';

                if($row->os == 'ANDROID'){
                    $dataOs = '<i class="bx bxl-android"></i> ANDROID';
                }elseif($row->os == 'IOS'){
                    $dataOs = '<i class="bx bxl-apple"></i> IOS';
                }else{
                    $dataOs = '';
                }

                $output .= 
                '
                <tr>
                    <td class="p-3">' . $row->tipe_hp . '</td>
                    <td class="p-3">' . $row->brand . '</td>
                    <td class="p-3">
                        <span class="text-muted">' . $dataOs . '</span>
                    </td>
                    <td class="p-3">' . $row->versi_aplikasi . '</td>
                </tr>
                ';
            }

            $output .= "</tbody></table>";


            return $output;
        }

    }

    public function reset_password_profile(Request $req)
    {
        $badge = $req->get('badge');
        
        if($badge){
            DB::beginTransaction();
            try{

                DB::table('tbl_karyawan')->where('badge_id', $badge)->update(['password' => Hash::make('Passw0rd')]);

                DB::commit();
                return response()->json([
                    'status' => 200,
                    'message' => 'Password berhasil direset'
                ]);
            } catch (\Exception $ex) {
                DB::rollback();
                return response()->json([
                    'status'    => 400, 
                    'message'   => 'gagal direset' . $ex->getMessage()
                ]);
            }
        }
    }

    public function updateMasaKontrak(Request $req)
    {

        $tglMulai = $req->get('dateMulai');
        $tglSelesai = $req->get('dateSelesai');
        $badge = $req->get('badge');

        if($badge){
            DB::beginTransaction();
            try{

		$dataMMS = DB::table('tbl_mms')->where('badge_id', $badge)->select('id')->get();
                if($dataMMS){
                    foreach($dataMMS as $row){

                        $idMMS = $row->id;

                        DB::table('tbl_mms')->where('id', $idMMS)->update([
                            'status_pendaftaran_mms' => '15', 
                            'updatedate' => date('Y-m-d H:i:s'), 
                            'updateby' => session('loggedInUser')['session_badge'], 
                            'is_active' => '1'
                        ]);

                        $riwayatData = array(
                            'id_mms' => $idMMS,
                            'status_mms' => 15,
                            'createby' => session('loggedInUser')['session_badge'],
                            'createdate' => date('Y-m-d H:i:s'),
                        );

    
                        DB::table('tbl_riwayatstatusmms')->insert($riwayatData);
                    }
                }
                
                DB::table('tbl_karyawan')->where('badge_id', $badge)->update([
                    'mulai_kontrak' => date('Y-m-d', strtotime($tglMulai)), 
                    'selesai_kontrak' => date('Y-m-d', strtotime($tglSelesai)), 
                    'is_active' => '1'
                ]);
                
                DB::commit();
                return response()->json([
                    'status' => 200,
                    'message' => 'Masa kontrak telah diperpanjang'
                ]);
            } catch (\Exception $ex) {
                DB::rollback();
                return response()->json([
                    'status'    => 400, 
                    'message'   => 'gagal di update' . $ex->getMessage()
                ]);
            }


        }


    }
}
